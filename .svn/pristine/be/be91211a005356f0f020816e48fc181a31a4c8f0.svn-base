//
//  RegisterIOUStepSecond.m
//  sosoYY
//
//  Created by zhy on 2017/8/17.
//  Copyright © 2017年 felix. All rights reserved.
//

#import "RegisterIOUSecondStep.h"
#import "ApplyMsgModel.h"
#import "CheckAndRepeat.h"
#import "StepTools.h"
#import <Contacts/Contacts.h>
#import "TakePhotoViewController.h"
@interface RegisterIOUSecondStep ()
{

    NSMutableArray *imageArray;
    NSIndexPath *currentIndexPath;
    NSMutableArray *photosArray;
    NSMutableArray *ContactList;
    NSMutableArray *oriEntity;
    NSMutableDictionary *params;
    UIButton *submitBtn;
}
@property (weak, nonatomic) IBOutlet UILabel *exporeLabel;

@end

@implementation RegisterIOUSecondStep

- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.navigationController.navigationBar.barTintColor = [UIColor fromHexValue:0xEa5413];
    [self.navigationController.navigationBar setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:
                                                                     [UIColor whiteColor], NSForegroundColorAttributeName,[UIFont systemFontOfSize:18], NSFontAttributeName, nil]];
    
    UIButton *backButton = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 40, 40)];
    [backButton setImage:[UIImage imageNamed:@"back"] forState:UIControlStateNormal];
    [backButton addTarget:self action:@selector(backClick) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *backBarItem = [[UIBarButtonItem alloc]initWithCustomView:backButton];
    
    UIBarButtonItem *negativeSpacer = [[ UIBarButtonItem alloc ] initWithBarButtonSystemItem : UIBarButtonSystemItemFixedSpace                                             target : nil action : nil ];
    negativeSpacer. width = - 18;
    self.navigationItem.leftBarButtonItems = @[negativeSpacer,backBarItem];
    self.navigationController.navigationBar.translucent = NO;
    [self setUp];
}

//返回
- (void)backClick{
    
    BOOL isAlert = NO;
    for (ApplyMsgModel *model in imageArray) {
    
        if (model.editImage != nil || model.imageUrl.length != 0) {
            isAlert = YES;
            break;
        }
    }
    
    if (isAlert) {
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"提示" message:@"如果您要返回，当前页面的数据将不会保存，确定这样做吗？" preferredStyle:UIAlertControllerStyleAlert];
        [alert addAction:[UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
            [self.navigationController popViewControllerAnimated:YES];
        }]];
        [alert addAction:[UIAlertAction actionWithTitle:@"取消" style:UIAlertActionStyleDefault handler:nil]];
        
        [self presentViewController:alert animated:YES completion:nil];
    }else {
    
        [self.navigationController popViewControllerAnimated:YES];
    }

}

- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath {

    NSLog(@"cell将要显示");
    if (indexPath.section == 1) {
        
        NSDictionary *dic = oriEntity[indexPath.row];
        if ([dic[@"path"] length] > 0) {
            
            UIImageView *cellImage = [cell.contentView viewWithTag:100];
            UIImageView *cameraLogo = [cell.contentView viewWithTag:101];
            UILabel *label = [cell.contentView viewWithTag:102];

            if (!cellImage.image) {
                [cellImage sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%s%@",requestHost,dic[@"path"]]] placeholderImage:nil completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
                    
                    if (image) {
                        
                        ApplyMsgModel *model = [[ApplyMsgModel alloc]init];
                        model.imageUrl = dic[@"path"];
                        model.oriImage = image;
                        model.editImage = image;
                        [imageArray replaceObjectAtIndex:indexPath.row withObject:model];
                        
                        [self imageIsOk];
                        
                        //隐藏相机图片
                        cameraLogo.hidden = YES;
                        //隐藏label
                        label.hidden = YES;
                        
                        CheckAndRepeat *checkModify = [[[NSBundle mainBundle] loadNibNamed:@"CheckAndRepeat" owner:self options:nil] lastObject];
                        checkModify.frame = CGRectMake(kScreenWidth/2-170/2, 90, 170, 100);
                        checkModify.activity.hidden = YES;
                        [cell.contentView addSubview:checkModify];
                    }else {
                        
                        cameraLogo.hidden = NO;
                        label.hidden = NO;
                    }
                    
                }];
            }
        }
    }
}

#pragma mark UI设置
- (void)setUp {
    
    self.title = @"开通白条";
    imageArray = [[NSMutableArray alloc]initWithCapacity:4];
    for (int i = 0; i < 4; i++) {
        
        ApplyMsgModel *model = [[ApplyMsgModel alloc]init];
        [imageArray addObject:model];
    }
    ContactList = [NSMutableArray array];
    params = [NSMutableDictionary dictionary];
    
#pragma mark 获取申请人证件照片
    [StepTools getApplyImgRequest:requestApplyImg finshed:^(id entity, NSError *error) {
        
        oriEntity  = entity;
    
        [self.tableView reloadData];
    }];
    
    submitBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, 10, kScreenWidth, 45)];
    [submitBtn setTitle:@"提交审核" forState:UIControlStateNormal];
    [submitBtn addTarget:self action:@selector(submitClick) forControlEvents:UIControlEventTouchUpInside];
    submitBtn.backgroundColor = [UIColor fromHexValue:0xCCCCCC];
    self.tableView.tableFooterView = submitBtn;
    self.exporeLabel.text = @"为了提高审核通过率，请您参考以下标准：\n∙建议使用原件拍照\n∙请确保所拍摄的证件，清晰，完整";
    
}

- (void)submitClick {

    int count = 0;
    for (int i = 0; i < 4; i++) {
        ApplyMsgModel *model = imageArray[i];
        if (model.editImage == nil) {
            count ++;
        }
    }
    
    if (count == 1) {
        for (int i = 0; i < 4; i++) {
            ApplyMsgModel *model = imageArray[i];
            switch (i) {
                case 0:
                    if (model.editImage == nil) {
                        [ZHProgressHUD showInfoWithText:@"请上传营业执照"];
                        return;
                    }
                    break;
                case 1:
                    if (model.editImage == nil) {
                        [ZHProgressHUD showInfoWithText:@"请上传GSP证书"];
                        return;
                    }
                    break;
                case 2:
                    if (model.editImage == nil) {
                        [ZHProgressHUD showInfoWithText:@"请上传身份证原件正面"];
                        return;
                    }
                    break;
                case 3:
                    if (model.editImage == nil) {
                        [ZHProgressHUD showInfoWithText:@"请上传药品经营许可证"];
                        return;
                    }
                    break;
                    
                default:
                    break;
            }
        }
    }else if (count > 1) {
    
        [ZHProgressHUD showInfoWithText:@"请上传必须的证件照片"];
        return;
    }else {
    
        [[UIApplication sharedApplication].keyWindow showLoadingView:@"loading"];
        if (ContactList.count == 0) {
             [self getConstact];
        }else {
            [self setParams];
        }
    }
}

- (void)getConstact {

    // 2. 获取联系人仓库
    CNContactStore * store = [[CNContactStore alloc] init];
    // 3. 创建联系人信息的请求对象
    NSArray * keys = @[CNContactGivenNameKey, CNContactFamilyNameKey, CNContactPhoneNumbersKey];
    // 4. 根据请求Key, 创建请求对象
    CNContactFetchRequest * request = [[CNContactFetchRequest alloc] initWithKeysToFetch:keys];
    // 5. 发送请求
    [store enumerateContactsWithFetchRequest:request error:nil usingBlock:^(CNContact * _Nonnull contact, BOOL * _Nonnull stop) {
        
        NSMutableDictionary *dic = [NSMutableDictionary dictionary];
        // 6.1 获取姓名
        NSString * givenName = contact.givenName;
        NSString * familyName = contact.familyName;
        NSLog(@"%@%@", familyName,givenName);
        [dic setObject:[NSString stringWithFormat:@"%@%@",familyName,givenName] forKey:@"MailName"];
        
        // 6.2 获取电话
        NSArray * phoneArray = contact.phoneNumbers;
        for (CNLabeledValue * labelValue in phoneArray) {
            
            CNPhoneNumber * number = labelValue.value;
            [dic setObject:[[NSString stringWithFormat:@"%@",number.stringValue] stringByReplacingOccurrencesOfString:@" " withString:@""] forKey:@"MailMobile"];
        }
        [ContactList addObject:dic];
    }];
    NSLog(@"ContactList = %@",ContactList);
    [self setParams];
}

- (void)setParams {

    RegisterIOUSecondStep *weakSelf = self;
    submitBtn.userInteractionEnabled = NO;
    //设置参数  依次为：店铺名，申请人名字，手机号码，身份证号，经度，纬度，联系人
    NSMutableDictionary *data = [NSMutableDictionary dictionary];
    [data setObject:self.applyMsgModel.storeName forKey:@"ename"];
    [data setObject:self.applyMsgModel.realname forKey:@"username"];
    [data setObject:self.applyMsgModel.mobile forKey:@"mobile"];
    [data setObject:self.applyMsgModel.number forKey:@"idno"];
    [data setObject:[NSString stringWithFormat:@"%f",self.applyMsgModel.longitude] forKey:@"longitude"];
    [data setObject:[NSString stringWithFormat:@"%f",self.applyMsgModel.latitude] forKey:@"latitude"];
    [data setObject:ContactList.count > 0 ? ContactList : [NSNull null] forKey:@"Maillist"];
    
     NSLog(@"%lu",sizeof(self.applyMsgModel.editImage));
    
    //上传门店照片
    [KSMNetworkRequest updateImgRequest:requestSubmitImage params:@{@"image":self.applyMsgModel.editImage,@"imageName":@"NewImg"} success:^(id responseObj) {
        
        NSLog(@"1");
        if ([responseObj[@"success"] integerValue] == 1) {
            [data setObject:responseObj[@"data"] forKey:@"NewImgURL"];
            
            //上传营业执照图片
            ApplyMsgModel *model = imageArray[0];
            [KSMNetworkRequest updateImgRequest:requestSubmitImage params:@{@"image":model.editImage,@"imageName":@"YyzzImg"} success:^(id responseObj) {
                NSLog(@"2");
                if ([responseObj[@"success"] integerValue] == 1) {
                    [data setObject:responseObj[@"data"] forKey:@"YyzzImgUrl"];
                    
                    //上传GSP图片
                    ApplyMsgModel *model = imageArray[1];
                    
                    [KSMNetworkRequest updateImgRequest:requestSubmitImage params:@{@"image":model.editImage,@"imageName":@"GspImg"} success:^(id responseObj) {
                        NSLog(@"3");
                        if ([responseObj[@"success"] integerValue] == 1) {
                            [data setObject:responseObj[@"data"] forKey:@"GspImgUrl"];
                            
                            //上传营身份证图片
                            ApplyMsgModel *model = imageArray[2];
                            [KSMNetworkRequest updateImgRequest:requestSubmitImage params:@{@"image":model.editImage,@"imageName":@"IdnoImg"} success:^(id responseObj) {
                                NSLog(@"4");
                                if ([responseObj[@"success"] integerValue] == 1) {
                                    [data setObject:responseObj[@"data"] forKey:@"IdnoImgUrl"];
                                    
                                    //上传药店经营许可证图片
                                    ApplyMsgModel *model = imageArray[3];
                                    [KSMNetworkRequest updateImgRequest:requestSubmitImage params:@{@"image":model.editImage,@"imageName":@"JyxkImg"} success:^(id responseObj) {
                                        NSLog(@"5");
                                        if ([responseObj[@"success"] integerValue] == 1) {
                                            [data setObject:responseObj[@"data"] forKey:@"JyxkImgUrl"];
    
                                            //上传通讯录
                                            [params setObject:data.mj_JSONString forKey:@"data"];
                                            [KSMNetworkRequest postRequest:requestSubmitMsg params:params success:^(id responseObj) {
                                                NSLog(@"responseObj = %@",responseObj);
                                                [[UIApplication sharedApplication].keyWindow hideToastActivity];
                                                submitBtn.userInteractionEnabled = YES;
                                                if ([responseObj[@"success"] integerValue] == 1) {
                                                    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"提示" message:@"资质已提交，审核时间最长1个工作日，请保持您的电话通畅！" preferredStyle:UIAlertControllerStyleAlert];
                                                    [alert addAction:[UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
                                                        [weakSelf.navigationController popToRootViewControllerAnimated:YES];
                                                    }]];
                                                    [weakSelf presentViewController:alert animated:YES completion:nil];
                                                    
                                                }else {
                                                     [ZHProgressHUD showInfoWithText:responseObj[@"info"]];
                                                }
                                                
                                            } failure:^(NSError *error) {
                                                
                                                [[UIApplication sharedApplication].keyWindow hideToastActivity];
                                                submitBtn.userInteractionEnabled = YES;
                                                [ZHProgressHUD showErrorWithText:@"网络失败，请重试！"];
                                            }];
                                        }else {
                                            submitBtn.userInteractionEnabled = YES;
                                             [ZHProgressHUD showInfoWithText:responseObj[@"info"]];
                                            [[UIApplication sharedApplication].keyWindow hideToastActivity];
                                        }
                                    } failure:^(NSError *error) {
                                        [[UIApplication sharedApplication].keyWindow hideToastActivity];
                                        submitBtn.userInteractionEnabled = YES;
                                        [ZHProgressHUD showErrorWithText:@"网络失败，请重试！"];
                                    }];
                                    
                                }else {
                                    submitBtn.userInteractionEnabled = YES;
                                     [ZHProgressHUD showInfoWithText:responseObj[@"info"]];
                                    [[UIApplication sharedApplication].keyWindow hideToastActivity];
                                }
                            } failure:^(NSError *error) {
                                submitBtn.userInteractionEnabled = YES;
                                [ZHProgressHUD showErrorWithText:@"网络失败，请重试！"];
                                [[UIApplication sharedApplication].keyWindow hideToastActivity];
                            }];
                            
                        }else {
                            submitBtn.userInteractionEnabled = YES;
                             [ZHProgressHUD showInfoWithText:responseObj[@"info"]];
                            [[UIApplication sharedApplication].keyWindow hideToastActivity];
                        }
                    } failure:^(NSError *error) {
                        submitBtn.userInteractionEnabled = YES;
                        [ZHProgressHUD showErrorWithText:@"网络失败，请重试！"];
                        [[UIApplication sharedApplication].keyWindow hideToastActivity];
                    }];
                    
                }else {
                    submitBtn.userInteractionEnabled = YES;
                     [ZHProgressHUD showInfoWithText:responseObj[@"info"]];
                    [[UIApplication sharedApplication].keyWindow hideToastActivity];
                }
            } failure:^(NSError *error) {
                submitBtn.userInteractionEnabled = YES;
                [ZHProgressHUD showErrorWithText:@"网络失败，请重试！"];
                [[UIApplication sharedApplication].keyWindow hideToastActivity];
            }];
            
        }else {
            submitBtn.userInteractionEnabled = YES;
            [ZHProgressHUD showInfoWithText:responseObj[@"info"]];
            [[UIApplication sharedApplication].keyWindow hideToastActivity];
        }
        
    } failure:^(NSError *error) {
        submitBtn.userInteractionEnabled = YES;
        [ZHProgressHUD showErrorWithText:@"网络失败，请重试！"];
        [[UIApplication sharedApplication].keyWindow hideToastActivity];
    }];
}

#pragma mark - Table view data source
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {

    currentIndexPath = indexPath;
    UITableViewCell *cell = [self.tableView cellForRowAtIndexPath:indexPath];
    UIImageView *imageView = [cell.contentView viewWithTag:100];
    
    ApplyMsgModel *model = imageArray[indexPath.row];
    
    if (model.editImage != nil || model.imageUrl.length != 0) {
        
        UIButton *modityBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, kScreenHeight-60, kScreenWidth, 50)];
        [modityBtn setTitle:@"重新上传" forState:UIControlStateNormal];
        [modityBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        [modityBtn addTarget:self action:@selector(choseStoreImg) forControlEvents:UIControlEventTouchUpInside];
        [StepTools scanBigImageWithImageView:imageView image:model.oriImage alpha:1 button:modityBtn];
        
    }else {
    
         [self choseStoreImg];
    }
}

#pragma mark 点击拍照
- (void)choseStoreImg {
    
    [StepTools hideImageView];
    
    TakePhotoViewController *takePhotoVC = [[TakePhotoViewController alloc]init];
    [takePhotoVC returnImage:^(UIImage *image) {
        
        UITableViewCell *cell = [self.tableView cellForRowAtIndexPath:currentIndexPath];
        UIImageView *cellImage = [cell.contentView viewWithTag:100];
        
        //先把图片转成NSData
        UIImage *editImage = [StepTools imageyasuo:image fillSize:CGSizeMake(kScreenWidth, kScreenHeight-120)];
        ApplyMsgModel *model = [[ApplyMsgModel alloc]init];
        model.oriImage = image;
        model.editImage = editImage;
        [imageArray replaceObjectAtIndex:currentIndexPath.row withObject:model];
        
        cellImage.image = editImage;
        //隐藏相机图片
        UIImageView *cameraLogo = [cell.contentView viewWithTag:101];
        cameraLogo.hidden = YES;
        //隐藏label
        UILabel *label = [cell.contentView viewWithTag:102];
        label.hidden = YES;
        
        //显示"点击查看或者修改"
        CheckAndRepeat *checkModify = [[[NSBundle mainBundle] loadNibNamed:@"CheckAndRepeat" owner:self options:nil] lastObject];
        checkModify.frame = CGRectMake(kScreenWidth/2-170/2, 90, 170, 100);
        checkModify.activity.hidden = YES;
        [cell.contentView addSubview:checkModify];
        
        [self imageIsOk];
        
    }];
    [self presentViewController:takePhotoVC animated:YES completion:nil];
}


- (void)imageIsOk {

    int imageCount = 0;
    for (ApplyMsgModel *model in imageArray) {
        if (model.oriImage != nil || model.imageUrl.length > 0) {
            imageCount ++;
        }
    }
    if (imageCount == 4) {
        submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
    }else {
        submitBtn.backgroundColor = [UIColor fromHexValue:0xCCCCCC];
    }
}

@end
