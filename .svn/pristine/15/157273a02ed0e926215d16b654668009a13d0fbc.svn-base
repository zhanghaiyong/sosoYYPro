//
//  RegisterIOUStepSecond.m
//  sosoYY
//
//  Created by zhy on 2017/8/17.
//  Copyright © 2017年 felix. All rights reserved.
//

#import "RegisterIOUSecondStep.h"
#import "ApplyMsgModel.h"
#import "CheckAndRepeat.h"
#import "StepTools.h"
#import <Contacts/Contacts.h>
#import "TakePhotoViewController.h"
@interface RegisterIOUSecondStep ()
{

    NSMutableArray *imageArray;
    NSIndexPath *currentIndexPath;
    NSMutableArray *photosArray;
    NSMutableArray *ContactList;
    NSMutableDictionary *params;
    UIButton *submitBtn;
}
@property (weak, nonatomic) IBOutlet UILabel *exporeLabel;

@end

@implementation RegisterIOUSecondStep


- (void)viewDidLoad {
    [super viewDidLoad];
    
    self.navigationController.navigationBar.barTintColor = [UIColor fromHexValue:0xEa5413];
    [self.navigationController.navigationBar setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:
                                                                     [UIColor whiteColor], NSForegroundColorAttributeName,[UIFont systemFontOfSize:18], NSFontAttributeName, nil]];
    
    UIButton *backButton = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 40, 40)];
    [backButton setImage:[UIImage imageNamed:@"back"] forState:UIControlStateNormal];
    [backButton addTarget:self action:@selector(backClick) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *backBarItem = [[UIBarButtonItem alloc]initWithCustomView:backButton];
    
    UIBarButtonItem *negativeSpacer = [[ UIBarButtonItem alloc ] initWithBarButtonSystemItem : UIBarButtonSystemItemFixedSpace                                             target : nil action : nil ];
    negativeSpacer. width = - 18;
    self.navigationItem.leftBarButtonItems = @[negativeSpacer,backBarItem];
    self.navigationController.navigationBar.translucent = NO;
    [self setUp];
}

//返回
- (void)backClick{
    
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark UI设置
- (void)setUp {
    
    self.title = @"开通白条";
    imageArray = [[NSMutableArray alloc]initWithCapacity:4];
    for (int i = 0; i < 4; i++) {
        
        ApplyMsgModel *model = [[ApplyMsgModel alloc]init];
        [imageArray addObject:model];
    }
    ContactList = [NSMutableArray array];
    params = [NSMutableDictionary dictionary];
    
#pragma mark 获取申请人证件照片
    [StepTools getApplyImgRequest:requestApplyMsg finshed:^(id entity, NSError *error) {
        
        for (int i = 0; i < 4; i++) {
            NSDictionary *dic = entity[i];
            if ([dic[@"path"] length] > 0) {
                NSIndexPath *pathIndex = [NSIndexPath indexPathForRow:i inSection:1];
                UITableViewCell *cell = [self.tableView cellForRowAtIndexPath:pathIndex];
                UIImageView *cellImage = [cell.contentView viewWithTag:100];
                UIImageView *cameraLogo = [cell.contentView viewWithTag:101];
                UILabel *label = [cell.contentView viewWithTag:102];
                [cellImage sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%s%@",requestHost,dic[@"path"]]] placeholderImage:nil completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
                    
                    if (image) {
                        ApplyMsgModel *model = [[ApplyMsgModel alloc]init];
                        model.imageUrl = dic[@"path"];
                        model.oriImage = image;
                        UIImage *editImage = [StepTools imageyasuo:image fillSize:CGSizeMake(cellImage.width, cellImage.height)];
                        model.editImage = editImage;
                        [imageArray replaceObjectAtIndex:i withObject:model];
                        
                        //隐藏相机图片
                        cameraLogo.hidden = YES;
                        //隐藏label
                        label.hidden = YES;
                        
                        CheckAndRepeat *checkModify = [[[NSBundle mainBundle] loadNibNamed:@"CheckAndRepeat" owner:self options:nil] lastObject];
                        checkModify.frame = CGRectMake(kScreenWidth/2-170/2, 90, 170, 100);
                        checkModify.activity.hidden = YES;
                        [cell.contentView addSubview:checkModify];
                    }else {
                    
                        cameraLogo.hidden = NO;
                        label.hidden = NO;
                    }
                }];
            }
        }
    }];
    
    submitBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, 10, kScreenWidth, 45)];
    [submitBtn setTitle:@"提交审核" forState:UIControlStateNormal];
    [submitBtn addTarget:self action:@selector(submitClick) forControlEvents:UIControlEventTouchUpInside];
    submitBtn.backgroundColor = [UIColor fromHexValue:0xCCCCCC];
    self.tableView.tableFooterView = submitBtn;
    self.exporeLabel.text = @"为了提高审核通过率，请您参考以下标准：\n∙建议使用原件拍照\n∙请确保所拍摄的证件，清晰，完整";
    
}

- (void)submitClick {

    int count = 0;
    for (int i = 0; i < 4; i++) {
        ApplyMsgModel *model = imageArray[i];
        if (model.editImage == nil) {
            count ++;
        }
    }
    
    if (count == 1) {
        for (int i = 0; i < 4; i++) {
            ApplyMsgModel *model = imageArray[i];
            switch (i) {
                case 0:
                    if (model.editImage == nil) {
                        [ZHProgressHUD showInfoWithText:@"请上传营业执照"];
                        return;
                    }
                    break;
                case 1:
                    if (model.editImage == nil) {
                        [ZHProgressHUD showInfoWithText:@"请上传GSP证书"];
                        return;
                    }
                    break;
                case 2:
                    if (model.editImage == nil) {
                        [ZHProgressHUD showInfoWithText:@"请上传身份证原件正面"];
                        return;
                    }
                    break;
                case 3:
                    if (model.editImage == nil) {
                        [ZHProgressHUD showInfoWithText:@"请上传药品经营许可证"];
                        return;
                    }
                    break;
                    
                default:
                    break;
            }
        }
    }else if (count > 1) {
    
        [ZHProgressHUD showInfoWithText:@"请上传必须的证件照片"];
        return;
    }else {
    
        [[UIApplication sharedApplication].keyWindow showLoadingView:@"loading"];
        if (ContactList.count == 0) {
            
            
            CNAuthorizationStatus status = [CNContactStore authorizationStatusForEntityType:CNEntityTypeContacts];
            switch (status) {
                case CNAuthorizationStatusNotDetermined:// 未进行授权选择
                {
                    dispatch_async(dispatch_get_main_queue(), ^{
                        CNContactStore *store = [[CNContactStore alloc] init];
                        [store requestAccessForEntityType:CNEntityTypeContacts completionHandler:^(BOOL granted, NSError * _Nullable error) {
                            if (granted) {
                                NSLog(@"授权成功");
                                [self getConstact];
                            } else {
                                [[UIApplication sharedApplication].keyWindow hideToastActivity];
                                UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"申请白条开通需要获取您的通讯录,请在'设置 -> 隐私 ->通讯录中授权'" delegate:self cancelButtonTitle:nil otherButtonTitles:@"确定", nil];
                                [alert show];
                                NSLog(@"授权失败");
                            }
                        }];
                    });
                }
                    break;
                case CNAuthorizationStatusRestricted: // 不仅应用软件无法访问通讯录数据，就连用户也无法通过设置修改授权状态
                {
                
                    [[UIApplication sharedApplication].keyWindow hideToastActivity];
                    UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"此设备不支持通讯录" delegate:self cancelButtonTitle:nil otherButtonTitles:@"确定", nil];
                    [alert show];
                }
                    break;
                case CNAuthorizationStatusDenied://表示用户不允许访问通讯录数
                {
                    [[UIApplication sharedApplication].keyWindow hideToastActivity];
                    UIAlertView *alert = [[UIAlertView alloc]initWithTitle:@"温馨提示" message:@"申请白条开通需要获取您的通讯录,请在'设置 -> 隐私 ->通讯录中授权'" delegate:self cancelButtonTitle:nil otherButtonTitles:@"确定", nil];
                    [alert show];
                }
                    break;
                case CNAuthorizationStatusAuthorized://应用软件期望得到的状态
                    [self getConstact];
                    break;
                    
                default:
                    break;
            }

        }else {
            
            [self setParams];
        }
    }
}

- (void)getConstact {

    // 2. 获取联系人仓库
    CNContactStore * store = [[CNContactStore alloc] init];
    // 3. 创建联系人信息的请求对象
    NSArray * keys = @[CNContactGivenNameKey, CNContactFamilyNameKey, CNContactPhoneNumbersKey];
    // 4. 根据请求Key, 创建请求对象
    CNContactFetchRequest * request = [[CNContactFetchRequest alloc] initWithKeysToFetch:keys];
    // 5. 发送请求
    [store enumerateContactsWithFetchRequest:request error:nil usingBlock:^(CNContact * _Nonnull contact, BOOL * _Nonnull stop) {
        
        NSMutableDictionary *dic = [NSMutableDictionary dictionary];
        // 6.1 获取姓名
        NSString * givenName = contact.givenName;
        NSString * familyName = contact.familyName;
        NSLog(@"%@%@", familyName,givenName);
        [dic setObject:[NSString stringWithFormat:@"%@%@",familyName,givenName] forKey:@"MailName"];
        
        // 6.2 获取电话
        NSArray * phoneArray = contact.phoneNumbers;
        for (CNLabeledValue * labelValue in phoneArray) {
            
            CNPhoneNumber * number = labelValue.value;
            NSLog(@"%@--%@", number.stringValue, labelValue.label);
            if (number.stringValue) {
                [dic setObject:[[NSString stringWithFormat:@"%@",number.stringValue] stringByReplacingOccurrencesOfString:@" " withString:@""] forKey:@"MailMobile"];
                continue;
            }
        }
        [ContactList addObject:dic];
    }];
    NSLog(@"ContactList = %@",ContactList);
    [self setParams];
}

- (void)setParams {

    RegisterIOUSecondStep *weakSelf = self;
    submitBtn.userInteractionEnabled = NO;
    submitBtn.backgroundColor = [UIColor fromHexValue:0xCCCCCC];
    //设置参数  依次为：店铺名，申请人名字，手机号码，身份证号，经度，纬度，联系人
    NSMutableDictionary *data = [NSMutableDictionary dictionary];
    [data setObject:self.applyMsgModel.storeName forKey:@"ename"];
    [data setObject:self.applyMsgModel.realname forKey:@"username"];
    [data setObject:self.applyMsgModel.mobile forKey:@"mobile"];
    [data setObject:self.applyMsgModel.number forKey:@"idno"];
    [data setObject:[NSString stringWithFormat:@"%f",self.applyMsgModel.longitude] forKey:@"longitude"];
    [data setObject:[NSString stringWithFormat:@"%f",self.applyMsgModel.latitude] forKey:@"latitude"];
    [data setObject:ContactList.count > 0 ? ContactList : NULL forKey:@"Maillist"];
    
    //上传门店照片
    [KSMNetworkRequest updateImgRequest:requestSubmitImage params:@{@"image":self.applyMsgModel.editImage,@"imageName":@"NewImg"} success:^(id responseObj) {
        
        NSLog(@"1");
        if ([responseObj[@"success"] integerValue] == 1) {
            [data setObject:responseObj[@"data"] forKey:@"NewImgURL"];
            
            //上传营业执照图片
            [KSMNetworkRequest updateImgRequest:requestSubmitImage params:@{@"image":self.applyMsgModel.editImage,@"imageName":@"YyzzImg"} success:^(id responseObj) {
                NSLog(@"2");
                if ([responseObj[@"success"] integerValue] == 1) {
                    [data setObject:responseObj[@"data"] forKey:@"YyzzImgUrl"];
                    
                    //上传GSP图片
                    [KSMNetworkRequest updateImgRequest:requestSubmitImage params:@{@"image":self.applyMsgModel.editImage,@"imageName":@"GspImg"} success:^(id responseObj) {
                        NSLog(@"3");
                        if ([responseObj[@"success"] integerValue] == 1) {
                            [data setObject:responseObj[@"data"] forKey:@"GspImgUrl"];
                            
                            //上传营身份证图片
                            [KSMNetworkRequest updateImgRequest:requestSubmitImage params:@{@"image":self.applyMsgModel.editImage,@"imageName":@"IdnoImg"} success:^(id responseObj) {
                                NSLog(@"4");
                                if ([responseObj[@"success"] integerValue] == 1) {
                                    [data setObject:responseObj[@"data"] forKey:@"IdnoImgUrl"];
                                    
                                    //上传药店经营许可证图片
                                    [KSMNetworkRequest updateImgRequest:requestSubmitImage params:@{@"image":self.applyMsgModel.editImage,@"imageName":@"JyxkImg"} success:^(id responseObj) {
                                        NSLog(@"5");
                                        if ([responseObj[@"success"] integerValue] == 1) {
                                            [data setObject:responseObj[@"data"] forKey:@"JyxkImgUrl"];
    
                                            //上传通讯录
                                            [params setObject:data.mj_JSONString forKey:@"data"];
                                            [KSMNetworkRequest postRequest:requestSubmitMsg params:params success:^(id responseObj) {
                                                NSLog(@"responseObj = %@",responseObj);
                                                [[UIApplication sharedApplication].keyWindow hideToastActivity];
                                                submitBtn.userInteractionEnabled = YES;
                                                submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
                                                if ([responseObj[@"success"] integerValue] == 1) {
                                                    UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"提示" message:@"资质已提交，审核时间最长1个工作日，请保持您的电话通畅！" preferredStyle:UIAlertControllerStyleAlert];
                                                    [alert addAction:[UIAlertAction actionWithTitle:@"确定" style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
                                                        [weakSelf.navigationController popToRootViewControllerAnimated:YES];
                                                    }]];
                                                }else {
                                                     [ZHProgressHUD showInfoWithText:responseObj[@"info"]];
                                                }
                                                
                                            } failure:^(NSError *error) {
                                                NSLog(@"error = %@",error.description);
                                                submitBtn.userInteractionEnabled = YES;
                                                submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
                                                [[UIApplication sharedApplication].keyWindow hideToastActivity];
                                                [ZHProgressHUD showErrorWithText:@"网络失败，请重试！"];
                                            }];
                                        }else {
                                            submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
                                            submitBtn.userInteractionEnabled = YES;
                                             [ZHProgressHUD showInfoWithText:responseObj[@"info"]];
                                            [[UIApplication sharedApplication].keyWindow hideToastActivity];
                                        }
                                    } failure:^(NSError *error) {
                                        [[UIApplication sharedApplication].keyWindow hideToastActivity];
                                        submitBtn.userInteractionEnabled = YES;
                                        submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
                                        [ZHProgressHUD showErrorWithText:@"网络失败，请重试！"];
                                    }];
                                    
                                }else {
                                    submitBtn.userInteractionEnabled = YES;
                                    submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
                                     [ZHProgressHUD showInfoWithText:responseObj[@"info"]];
                                    [[UIApplication sharedApplication].keyWindow hideToastActivity];
                                }
                            } failure:^(NSError *error) {
                                submitBtn.userInteractionEnabled = YES;
                                submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
                                [ZHProgressHUD showErrorWithText:@"网络失败，请重试！"];
                                [[UIApplication sharedApplication].keyWindow hideToastActivity];
                            }];
                            
                            
                        }else {
                            submitBtn.userInteractionEnabled = YES;
                            submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
                             [ZHProgressHUD showInfoWithText:responseObj[@"info"]];
                            [[UIApplication sharedApplication].keyWindow hideToastActivity];
                        }
                    } failure:^(NSError *error) {
                        submitBtn.userInteractionEnabled = YES;
                        submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
                        [ZHProgressHUD showErrorWithText:@"网络失败，请重试！"];
                        [[UIApplication sharedApplication].keyWindow hideToastActivity];
                    }];
                    
                }else {
                    submitBtn.userInteractionEnabled = YES;
                    submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
                     [ZHProgressHUD showInfoWithText:responseObj[@"info"]];
                    [[UIApplication sharedApplication].keyWindow hideToastActivity];
                }
            } failure:^(NSError *error) {
                submitBtn.userInteractionEnabled = YES;
                submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
                [ZHProgressHUD showErrorWithText:@"网络失败，请重试！"];
                [[UIApplication sharedApplication].keyWindow hideToastActivity];
            }];
            
        }else {
            submitBtn.userInteractionEnabled = YES;
            submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
            [ZHProgressHUD showInfoWithText:responseObj[@"info"]];
            [[UIApplication sharedApplication].keyWindow hideToastActivity];
        }
        
    } failure:^(NSError *error) {
        submitBtn.userInteractionEnabled = YES;
        submitBtn.backgroundColor = [UIColor fromHexValue:0xEA5413];
        [ZHProgressHUD showErrorWithText:@"网络失败，请重试！"];
        [[UIApplication sharedApplication].keyWindow hideToastActivity];
    }];
}

#pragma mark - Table view data source
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {

    currentIndexPath = indexPath;
    UITableViewCell *cell = [self.tableView cellForRowAtIndexPath:indexPath];
    UIImageView *imageView = [cell.contentView viewWithTag:100];
    
    ApplyMsgModel *model = imageArray[indexPath.row];
    
    if (model.editImage != nil || model.imageUrl.length != 0) {
        
        UIButton *modityBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, kScreenHeight-60, kScreenWidth, 50)];
        [modityBtn setTitle:@"重新上传" forState:UIControlStateNormal];
        [modityBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
        [modityBtn addTarget:self action:@selector(choseStoreImg) forControlEvents:UIControlEventTouchUpInside];
        [StepTools scanBigImageWithImageView:imageView image:model.oriImage alpha:1 button:modityBtn];
        
    }else {
    
         [self choseStoreImg];
    }
}

#pragma mark 点击拍照
- (void)choseStoreImg {
    
    [StepTools hideImageView];
    
    TakePhotoViewController *takePhotoVC = [[TakePhotoViewController alloc]init];
    [takePhotoVC returnImage:^(UIImage *image) {
        
        if (currentIndexPath.row == 3) {
            
            submitBtn.backgroundColor = [UIColor fromHexValue:0xEa5413];
        }else {
        
            submitBtn.backgroundColor = [UIColor fromHexValue:0xCCCCCC];
        }
        
        UITableViewCell *cell = [self.tableView cellForRowAtIndexPath:currentIndexPath];
        UIImageView *cellImage = [cell.contentView viewWithTag:100];
        
        //先把图片转成NSData
        UIImage *editImage = [StepTools imageyasuo:image fillSize:CGSizeMake(cellImage.width, cellImage.height)];
        ApplyMsgModel *model = [[ApplyMsgModel alloc]init];
        model.oriImage = image;
        model.editImage = editImage;
        [imageArray replaceObjectAtIndex:currentIndexPath.row withObject:model];
        
        cellImage.image = editImage;
        //隐藏相机图片
        UIImageView *cameraLogo = [cell.contentView viewWithTag:101];
        cameraLogo.hidden = YES;
        //隐藏label
        UILabel *label = [cell.contentView viewWithTag:102];
        label.hidden = YES;
        
        //显示"点击查看或者修改"
        CheckAndRepeat *checkModify = [[[NSBundle mainBundle] loadNibNamed:@"CheckAndRepeat" owner:self options:nil] lastObject];
        checkModify.frame = CGRectMake(kScreenWidth/2-170/2, 90, 170, 100);
        checkModify.activity.hidden = YES;
        [cell.contentView addSubview:checkModify];
    }];
    [self presentViewController:takePhotoVC animated:YES completion:nil];
}


@end
